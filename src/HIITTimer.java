
import java.awt.Toolkit;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

public class HIITTimer extends javax.swing.JFrame {

    static int input;
    static String diffW;
    static String diffR;
    static String sets;
    static Timer t;
    static TimerTask task;
    static Toolkit toolkit;

    public void difficulty() {
        JLabel centerDiff = new JLabel("Please choose your difficlty level", JLabel.CENTER);
        Object[] choices = {"Beginner (30 sec Work/30 sec Rest)", "Intermediate (45 sec Work/15 sec Rest)", "Advanced (50 sec Work/10 sec Rest)"};
        Object defaultChoice = choices[0];
        input = JOptionPane.showOptionDialog(null, centerDiff, "Your Daily Workout", JOptionPane.YES_NO_CANCEL_OPTION,
                JOptionPane.PLAIN_MESSAGE, null, choices, defaultChoice);
        switch (input) {
            case JOptionPane.CANCEL_OPTION:
                diffW = "50";
                diffR = "10";
                break;
            case JOptionPane.NO_OPTION:
                diffW = "45";
                diffR = "15";
                break;
            default:
                diffW = "30";
                diffR = "30";
                break;
        }
        numberOfSets();
        goTime.setText(String.valueOf(diffW));
        restTime.setText(String.valueOf(diffR));
    }

    public void numberOfSets() {
        JLabel centerSet = new JLabel("Please choose your number of sets", JLabel.CENTER);

        Object[] choices = {"3 (15 Minutes)", "4 (20 Minutes)", "5 (25 Minutes)"};
        Object defaultChoice = choices[0];
        input = JOptionPane.showOptionDialog(null, centerSet, "Your Daily Workout", JOptionPane.YES_NO_CANCEL_OPTION,
                JOptionPane.PLAIN_MESSAGE, null, choices, defaultChoice);
        switch (input) {
            case JOptionPane.CANCEL_OPTION:
                sets = "5";
                break;
            case JOptionPane.NO_OPTION:
                sets = "4";
                break;
            default:
                sets = "3";
                break;
        }
//        System.out.println(diff);
//        System.out.println(sets);
    }

    public HIITTimer() {
        initComponents();
        difficulty();
        start.setEnabled(true);
        stop.setEnabled(false);
        reset.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        restTime = new javax.swing.JLabel();
        goTime = new javax.swing.JLabel();
        start = new javax.swing.JButton();
        stop = new javax.swing.JButton();
        reset = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAlwaysOnTop(true);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 72)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("REST:");
        jLabel1.setToolTipText("");

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 72)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("GO:");
        jLabel2.setToolTipText("");

        restTime.setFont(new java.awt.Font("Dialog", 1, 72)); // NOI18N
        restTime.setText(" ");
        restTime.setText(diffR);
        restTime.setToolTipText("");

        goTime.setFont(new java.awt.Font("Dialog", 1, 72)); // NOI18N
        goTime.setText(diffW);
        goTime.setText(" ");

        start.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        start.setText("Start");
        start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startActionPerformed(evt);
            }
        });

        stop.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        stop.setText("Stop");
        stop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopActionPerformed(evt);
            }
        });

        reset.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        reset.setText("Reset");
        reset.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(restTime, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(goTime, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(start, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(reset, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                        .addComponent(stop, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(goTime, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(restTime)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(start)
                    .addComponent(reset)
                    .addComponent(stop))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getAccessibleContext().setAccessibleParent(this);

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void startActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startActionPerformed
        start.setEnabled(false);
        stop.setEnabled(true);
        reset.setEnabled(true);
        t = new Timer();
        toolkit = Toolkit.getDefaultToolkit();
        task = new TimerTask() {
            public void run() {
                int go = Integer.parseInt(goTime.getText());
                int rest = Integer.parseInt(restTime.getText());
                int s = Integer.parseInt(sets);
                if (s > 0) {
                    if (go > 0) {
                        go--;
                        goTime.setText(String.valueOf(go));
                        if (go <= 3) {
                            toolkit.beep();
                        }
                    }
                    if (rest > 0 && go == 0) {
                        rest--;
                        restTime.setText(String.valueOf(rest));
                        if (rest <= 3) {
                            toolkit.beep();
                        }
                    }
                    if (rest == 0 && go == 0) {
                        goTime.setText(String.valueOf(45));
                        restTime.setText(String.valueOf(15));
                        s--;
                    }

                }
            }
        };
        t.scheduleAtFixedRate(task, 0, 1000);
    }//GEN-LAST:event_startActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        start.setEnabled(true);
        stop.setEnabled(false);
        reset.setEnabled(false);
        t.cancel();
        goTime.setText(diffW);
        restTime.setText(diffR);
    }//GEN-LAST:event_resetActionPerformed

    private void stopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopActionPerformed
        start.setEnabled(true);
        stop.setEnabled(false);
        reset.setEnabled(true);
        t.cancel();
    }//GEN-LAST:event_stopActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HIITTimer.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HIITTimer.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HIITTimer.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HIITTimer.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                HIITTimer h = new HIITTimer();
                h.setVisible(true);
                h.setAlwaysOnTop(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel goTime;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton reset;
    private javax.swing.JLabel restTime;
    private javax.swing.JButton start;
    private javax.swing.JButton stop;
    // End of variables declaration//GEN-END:variables
}
